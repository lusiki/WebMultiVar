sentiment_stars <- tidy_review %>%
inner_join(get_sentiments("bing")) %>%
count(Stars, sentiment) %>%
spread(sentiment, n)
sentiment_stars <- tidy_review %>%
inner_join(get_sentiments("bing")) %>%
count(Stars, sentiment) %>%
spread(sentiment, n) %>%
mutate(overall_sentiment = positive - negative,
stars = fct_reorder(Stars, overall_sentiment))
sentiment_stars <- tidy_review %>%
inner_join(get_sentiments("bing")) %>%
count(Stars, sentiment) %>%
spread(sentiment, n) %>%
mutate(overall_sentiment = positive - negative),
sentiment_stars <- tidy_review %>%
inner_join(get_sentiments("bing")) %>%
count(Stars, sentiment) %>%
spread(sentiment, n) %>%
mutate(overall_sentiment = positive - negative)
sentiment_stars
sentiment_stars <- tidy_review %>%
inner_join(get_sentiments("bing")) %>%
count(Stars, sentiment) %>%
spread(sentiment, n) %>%
mutate(overall_sentiment = positive - negative,
stars = fct_reorder(as.factor(Stars), overall_sentiment))
gg4 <- ggplot(sentiment_stars,
aes(x = stars, y = overall_sentiment, fill = as.factor(Stars))) +
geom_col(show.legend = FALSE) +
coord_flip() +
labs(title = "Overall Sentiment by Stars",
subtitle = "Reviews for Robotic Vacuums",
x = "Stars",
y = "Overall Sentiment")
gg4
sparse_review
tidy_review %>%
count(word, id) %>%
cast_dtm(id, word, n)
dtm_review <- tidy_review %>%
count(word, id) %>%
cast_dtm(id, word, n) %>%
as.matrix()
dtm_review[1:4, 2000:2004]
library(topicmodels)
lda_out <- LDA(
dtm_review,
k = 2,
method = "Gibbs",
control = list(seed = 42))
lda_out
glimpse(lda_out)
lda_topics <- lda_out %>%
tidy(matrix = "beta")
lda_topics %>%
arrange(desc(beta))
# Software podrška (paketi)
<br>
<br>
```{r, include=TRUE, fig.align="center", echo=FALSE, out.width="500px"}
knitr::include_graphics("../Foto/txt1.png")
```
# anti_join()
<br>
<br>
```{r, include=TRUE, fig.align="center", echo=FALSE, out.width="500px"}
knitr::include_graphics("../Foto/txt3.png")
```
options(htmltools.dir.version = FALSE)
library(knitr)
opts_chunk$set(
fig.align="center", #fig.width=6, fig.height=4.5,
# out.width="748px", #out.length="520.75px",
dpi=300, #fig.path='Figs/',
cache=T, echo=T, warning=F, message=F
)
knitr::opts_hooks$set(fig.callout = function(options) {
if (options$fig.callout) {
options$echo <- FALSE
options$out.height <- "99%"
options$fig.width <- 16
options$fig.height <- 8
}
options
})
knitr::include_graphics("../Foto/surv_1.png")
install.packages("TH.data")
install.packages("Ecdat")
library()
library(TH.data)
library(Ecdat)
#install.packages("TH.data")
#install.packages("Ecdat")
data(GBSG2, package = "TH.data")
data(UnempDur, package = "Ecdat")
knitr::include_graphics("../Foto/surv_1.png")
time <- c(5, 6, 2, 4, 4)
event <- c(1, 0, 0, 1, 1)
library(survival)
Surv(time, event)
library(survminer)
install.packages("survminer")
library(survminer)
time <- c(5, 6, 2, 4, 4)
event <- c(1, 0, 0, 1, 1)
# Kaplan-Meier
km <- survfit(Surv(time, event) ~ 1)
ggsurvplot(km, conf.int = FALSE,
risk.table = "nrisk_cumevents",
legend = "none")
# Kaplan-Meier
km <- survfit(Surv(time, event) ~ 1)
ggsurvplot(km, conf.int = FALSE,
risk.table = "nrisk_cumevents",
legend = "none")
# Kaplan-Meier
km <- survfit(Surv(time, event) ~ 1)
ggsurvplot(km, conf.int = FALSE,
risk.table = "nrisk_cumevents",
legend = "none")
ggsurvplot(
fit = km,
palette = "blue",
linetype = 1,
surv.median.line = "hv",
risk.table = TRUE,
cumevents = TRUE,
cumcensor = TRUE,
tables.height = 0.1
)
ggsurvplot(km)
Surv(time, event) ~ 1)
Surv(time, event)
wb <- survreg(surv(time, event)~1,data)
wb <- survreg(Surv(time, cens) ~ 1, data = GBSG2)
predict(wb, type = "quantile", p = 1 - 0.9, newdata = data.frame(1))
wb <- survreg(Surv(time, cens) ~ 1)
knitr::include_graphics("../Foto/surv13.png")
knitr::include_graphics("../Foto/surv14.png")
wbmod <- survreg(Surv(time, cens) ~ horTh + tsize, data = GBSG2)
coef(wbmod)
# Odredi kombinacije kontrolnih varijabli
newdat <- expand.grid(
horTh = levels(GBSG2$horTh),
tsize = quantile(GBSG2$tsize, probs = c(0.25, 0.5, 0.75)) )
newdat
---
# Korak 2
## Izračunaj survival krivulje
surv <- seq(.99, .01, by = -.01)
# Korak 2
## Izračunaj survival krivulje
surv <- seq(.99, .01, by = -.01)
t <- predict(wbmod, type = "quantile", p = 1 - surv, newdata = newdat)
dim(t)
t[, 1:7]
# Promijeni oblik
library("reshape2")
surv_wbmod <- melt(surv_wbmod_wide, id.vars = c("horTh", "tsize"),
variable.name = "surv_id", value.name = "time")
# Korak 3
## Napravi data.frame sa survival krivuljom
surv_wbmod_wide <- cbind(newdat, t)
surv_wbmod <- melt(surv_wbmod_wide, id.vars = c("horTh", "tsize"),
variable.name = "surv_id", value.name = "time")
$
surv_wbmod$surv <- surv[as.numeric(surv_wbmod$surv_id)]
surv_wbmod[, c("upper", "lower", "std.err", "strata")] <- NA
# Korak 3
str(surv_wbmod)
# Korak 4
## Prikaži grafički
ggsurvplot_df(surv_wbmod, surv.geom = geom_line,
linetype = "horTh", color = "tsize", legend.title = NULL)
survreg(Surv(time, cens) ~ horTh,
data = GBSG2)
survreg(Surv(time, cens) ~ horTh,
data = GBSG2,
dist = "exponential")
survreg(Surv(time, cens) ~ horTh,
data = GBSG2,
dist = "lognormal")
knitr::include_graphics("../Foto/surv16.png")
knitr::include_graphics("../Foto/surv16.png")
knitr::include_graphics("../Foto/surv17.png")
options(htmltools.dir.version = FALSE)
library(knitr)
opts_chunk$set(
fig.align="center", #fig.width=6, fig.height=4.5,
# out.width="748px", #out.length="520.75px",
dpi=300, #fig.path='Figs/',
cache=T, echo=T, warning=F, message=F
)
knitr::opts_hooks$set(fig.callout = function(options) {
if (options$fig.callout) {
options$echo <- FALSE
options$out.height <- "99%"
options$fig.width <- 16
options$fig.height <- 8
}
options
})
edge_list <- tibble(from = c(1, 2, 2, 3, 4), to = c(2, 3, 4, 2, 1))
library(tidyverse)  # data manipulation and visualization
library(gridExtra)  # plot arrangement
library(ggplot2)
library(tidyverse)
library(dplyr)
edge_list <- tibble(from = c(1, 2, 2, 3, 4), to = c(2, 3, 4, 2, 1))
node_list <- tibble(id = 1:4)
epistole  <- url %>%
html() %>%
html_nodes(xpath='/html/body/div[4]/div/main/div[2]/div/div/div[3]/div[2]/div[2]') %>%
html_table()
library(rvest)
epistole  <- url %>%
html() %>%
html_nodes(xpath='/html/body/div[4]/div/main/div[2]/div/div/div[3]/div[2]/div[2]') %>%
html_table()
epistole  <- url %>%
read_html() %>%
html_nodes(xpath='/html/body/div[4]/div/main/div[2]/div/div/div[3]/div[2]/div[2]') %>%
html_table()
content <- read_html("https://github.com/jessesadler/intro-to-r/blob/master/data/correspondence-data-1585.csv")
tables <- content %>% html_table(fill = TRUE)
first_table <- tables[[1]]
first_table
first_table <- first_table[-1,]
library(janitor)
first_table <- first_table %>% clean_names()
first_table
content <- read_html("https://github.com/jessesadler/intro-to-r/blob/master/data/correspondence-data-1585.csv")
tab <- read_html("https://github.com/jessesadler/intro-to-r/blob/master/data/correspondence-data-1585.csv") %>% html_table(fill = TRUE)
tab
tab <- read_html("https://github.com/jessesadler/intro-to-r/blob/master/data/correspondence-data-1585.csv") %>% html_table(fill = TRUE) %>% row_to_names(.,1)
tab <- read_html("https://github.com/jessesadler/intro-to-r/blob/master/data/correspondence-data-1585.csv") %>% html_table(fill = TRUE) %>% row_to_names()
tab <- read_html("https://github.com/jessesadler/intro-to-r/blob/master/data/correspondence-data-1585.csv") %>% html_table(fill = TRUE) %>% row_to_names(1)
tab <- read_html("https://github.com/jessesadler/intro-to-r/blob/master/data/correspondence-data-1585.csv") %>% html_table(fill = TRUE)
tab
tab <- read_html("https://github.com/jessesadler/intro-to-r/blob/master/data/correspondence-data-1585.csv") %>% html_table(fill = TRUE) %>% select(-1) %>% row_to_names(1)
tab <- read_html("https://github.com/jessesadler/intro-to-r/blob/master/data/correspondence-data-1585.csv") %>% html_table(fill = TRUE) %>% as.data.frame() %>% select(-1)
tab
tab <- read_html("https://github.com/jessesadler/intro-to-r/blob/master/data/correspondence-data-1585.csv") %>%
html_table(fill = TRUE) %>%
as.data.frame() %>%
select(-1) %>%
row_to_names(1)
tab
glimpse(epistole)
epistole <- read_html("https://github.com/jessesadler/intro-to-r/blob/master/data/correspondence-data-1585.csv") %>%
html_table(fill = TRUE) %>%
as.data.frame() %>%
select(-1) %>%
row_to_names(1)
glimpse(epistole)
head(epistole,4)
head(epistole,5)
epistole
epistole
sources <- epistole %>%
distinct(source) %>%
rename(label = source)
destinations <- epistole %>%
distinct(destination) %>%
rename(label = destination)
sources
destinations
sources
View(destinations)
sources
sources
sources <- epistole %>%
distinct(source) %>%
rename(label = source)
# dodaj ID
nodes <- nodes %>% rowid_to_column("id")
nodes
# poveži u jedan objekt
nodes <- full_join(sources, destinations, by = "label")
nodes
# dodaj ID
nodes <- nodes %>% rowid_to_column("id")
nodes
per_route <- epistole %>%
group_by(source, destination) %>%
summarise(weight = n()) %>%
ungroup()
per_route
edges <- per_route %>%
left_join(nodes, by = c("source" = "label")) %>%
rename(from = id)
edges
s
edges <- edges %>%
left_join(nodes, by = c("destination" = "label")) %>%
rename(to = id)
edges
library(network)
install.packages("network")
routes_network <- network(edges,
vertex.attr = nodes,
matrix.type = "edgelist",
ignore.eval = FALSE)
library(network)
routes_network <- network(edges,
vertex.attr = nodes,
matrix.type = "edgelist",
ignore.eval = FALSE)
class(routes_network)
routes_network
plot(routes_igraph, edge.arrow.size = 0.2)
library(igraph)
# Napravi mrežni objekt
routes_igraph <- graph_from_data_frame(d = edges,
vertices = nodes,
directed = TRUE)
detach(package:network) # ukloni paket
rm(routes_network) # Ukloni iz radnog prostora
library(igraph)
# Napravi mrežni objekt
routes_igraph <- graph_from_data_frame(d = edges,
vertices = nodes,
directed = TRUE)
# 1. način
routes_tidy <- tbl_graph(nodes = nodes, edges = edges, directed = TRUE)
# 2.način
routes_igraph_tidy <- as_tbl_graph(routes_igraph)
library(visNetwork)
library(networkD3)
install.packages("networkD3")
library(tidyverse)  # data manipulation and visualization
library(gridExtra)  # plot arrangement
library(ggplot2)
library(tidyverse)
library(dplyr)
library(rvest)
library(janitor)
edge_list <- tibble(from = c(1, 2, 2, 3, 4), to = c(2, 3, 4, 2, 1))
node_list <- tibble(id = 1:4)
edge_list
node_list
url <- "https://github.com/jessesadler/intro-to-r/blob/master/data/correspondence-data-1585.csv"
epistole <- read_html(url) %>%
html_table(fill = TRUE) %>%
as.data.frame() %>%
select(-1) %>%
row_to_names(1)
glimpse(epistole)
epistole
sources <- epistole %>%
distinct(source) %>%
rename(label = source)
sources
sources
d
destinations <- epistole %>%
distinct(destination) %>%
rename(label = destination)
destinations
# poveži u jedan objekt
nodes <- full_join(sources, destinations, by = "label")
# dodaj ID
nodes <- nodes %>% rowid_to_column("id")
t
per_route <- epistole %>%
group_by(source, destination) %>%
summarise(weight = n()) %>%
ungroup()
per_route
edges <- per_route %>%
left_join(nodes, by = c("source" = "label")) %>%
rename(from = id)
edges
edges <- edges %>%
left_join(nodes, by = c("destination" = "label")) %>%
rename(to = id)
edges
library(network)
routes_network <- network(edges,
vertex.attr = nodes,
matrix.type = "edgelist",
ignore.eval = FALSE)
class(routes_network)
routes_network
plot(routes_network, vertex.cex = 3)
plot(routes_network, vertex.cex = 3, mode = "circle")
detach(package:network) # ukloni paket
rm(routes_network) # Ukloni iz radnog prostora
library(igraph)
# Napravi mrežni objekt
routes_igraph <- graph_from_data_frame(d = edges,
vertices = nodes,
directed = TRUE)
nodes
# Napravi mrežni objekt
routes_igraph <- graph_from_data_frame(d = edges,
vertices = nodes,
directed = TRUE)
edges
# Napravi mrežni objekt
routes_igraph <- graph_from_data_frame(d = edges,
vertices = nodes,
directed = TRUE)
View(edges)
View(edge_list)
View(edges)
edges <- edges %>%
left_join(nodes, by = c("destination" = "label")) %>%
rename(to = id)
edges
edges
edgesp <- edges[,-c(1,2)]
# Napravi mrežni objekt
routes_igraph <- graph_from_data_frame(d = edgesp,
vertices = nodes,
directed = TRUE)
nodes
edges
nodes
edges <- per_route %>%
left_join(nodes, by = c("source" = "label")) %>%
rename(from = id)
edges
edges <- edges %>%
left_join(nodes, by = c("destination" = "label")) %>%
rename(to = id)
edges
# Napravi mrežni objekt
routes_igraph <- graph_from_data_frame(d = edges,
vertices = nodes,
directed = TRUE)
plot(routes_igraph, edge.arrow.size = 0.2)
View(nodes)
actors <- data.frame(name=c("Alice", "Bob", "Cecil", "David",
"Esmeralda"),
age=c(48,33,45,34,21),
gender=c("F","M","F","M","F"))
relations <- data.frame(from=c("Bob", "Cecil", "Cecil", "David",
"David", "Esmeralda"),
to=c("Alice", "Bob", "Alice", "Alice", "Bob", "Alice"),
same.dept=c(FALSE,FALSE,TRUE,FALSE,FALSE,TRUE),
friendship=c(4,5,5,2,1,1), advice=c(4,5,5,4,2,3))
View(actors)
View(relations)
g <- graph_from_data_frame(relations, directed=TRUE, vertices=actors)
print(g, e=TRUE, v=TRUE)
nodes %>% rename(names=label) -> nod
View(nod)
nodes %>% rename(names=label) %>% select(names,id) -> nod
# Napravi mrežni objekt
routes_igraph <- graph_from_data_frame(d = edges,
vertices = nod,
directed = TRUE)
routes_igraph # Pogledaj objekt
plot(routes_igraph, edge.arrow.size = 0.2)
# Cirkularna vizualizacija
ggraph(routes_igraph, layout = "linear") +
geom_edge_arc(aes(width = weight), alpha = 0.8) +
scale_edge_width(range = c(0.2, 2)) +
geom_node_text(aes(label = label)) +
labs(edge_width = "Letters") +
theme_graph()
library(ggraph)
function (mat, widths = rep.int(1, ncol(mat)), heights = rep.int(1,
nrow(mat)), respect = FALSE)
plot(routes_igraph, layout = layout_with_graphopt, edge.arrow.size = 0.2)
plot(routes_igraph, layout = layout_with_graphopt, edge.arrow.size = 0.2)
library(tidygraph)
library(ggraph)
# 1. način
routes_tidy <- tbl_graph(nodes = nodes, edges = edges, directed = TRUE)
# 2.način
routes_igraph_tidy <- as_tbl_graph(routes_igraph)
# Pregledaj objekte
class(routes_tidy)
class(routes_igraph_tidy)
class(routes_igraph)
routes_tidy
routes_tidy %>%
activate(edges) %>%
arrange(desc(weight))
# Osnovna vizualizacija
ggraph(routes_tidy) + geom_edge_link() + geom_node_point() + theme_graph()
# Pobolljšana vizualizacija
ggraph(routes_tidy, layout = "graphopt") +
geom_node_point() +
geom_edge_link(aes(width = weight), alpha = 0.8) +
scale_edge_width(range = c(0.2, 2)) +
geom_node_text(aes(label = label), repel = TRUE) +
labs(edge_width = "Letters") +
theme_graph()
# Cirkularna vizualizacija
ggraph(routes_igraph, layout = "linear") +
geom_edge_arc(aes(width = weight), alpha = 0.8) +
scale_edge_width(range = c(0.2, 2)) +
geom_node_text(aes(label = label)) +
labs(edge_width = "Letters") +
theme_graph()
library(visNetwork)
visNetwork(nodes, edges)
library(networkD3)
nodes_d3 <- mutate(nodes, id = id - 1)
edges_d3 <- mutate(edges, from = from - 1, to = to - 1)
forceNetwork(Links = edges_d3, Nodes = nodes_d3, Source = "from", Target = "to",
NodeID = "label", Group = "id", Value = "weight",
opacity = 1, fontSize = 16, zoom = TRUE)
ankeyNetwork(Links = edges_d3, Nodes = nodes_d3, Source = "from", Target = "to",
NodeID = "label", Value = "weight", fontSize = 16, unit = "Letter(s)")
sankeyNetwork(Links = edges_d3, Nodes = nodes_d3, Source = "from", Target = "to",
NodeID = "label", Value = "weight", fontSize = 16, unit = "Letter(s)")
mtcars[,c(1,3:6)]
