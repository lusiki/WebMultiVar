# Provedi PCA
iris_PCA <- FactoMineR::PCA(iris[,-5], graph = F)
iris_PCA
# Vizualizacija 1
factoextra::fviz_pca_ind(iris_PCA,
geom.ind = "point",
col.ind = iris$Species,
addEllipses = T,
legend.title = "Grupa",
palette = c("#00AFBB", "#E7B800", "#FC4E07"))
# Vizualizacija 2
factoextra::fviz_pca_biplot(iris_PCA,
geom.ind = "point",
col.ind = iris$Species,
addEllipses = T,
legend.title = "Grupa",
palette = "jco",
col.var = "black",
label = "var",
repel = T)
# Vizualizacija 2
factoextra::fviz_pca_biplot(iris_PCA,
geom.ind = "point",
col.ind = iris$Species,
addEllipses = T,
legend.title = "Grupa",
palette = "jco",
col.var = "black",
label = "var",
repel = T,
labelsize = 3)
options(htmltools.dir.version = FALSE)
library(knitr)
opts_chunk$set(
fig.align="center", #fig.width=6, fig.height=4.5,
# out.width="748px", #out.length="520.75px",
dpi=300, #fig.path='Figs/',
cache=F#, echo=F, warning=F, message=F
)
gcbs <- readRDS("../Podatci/GCBS_data.rds")
str(gcbs)
knitr::include_graphics("../Foto/konstrukti_FA.png")
knitr::include_graphics("../Foto/unidim_FA.png")
EFA_model <- fa(gcbs)
library(psych)
EFA_model <- fa(gcbs)
EFA_model$loadings
fa.diagram(EFA_model)
describe(gcbs)
N <- nrow(gcbs)
indices <- seq(1,N)
indices_EFA <- sample(indices,floor((0.5 * N)))
indices_CFA <- indices[!(indices %in% indices_EFA)]
gcbs_EFA <- gcbs[indices_EFA, ]
gcbs_CFA <- gcbs[indices_CFA, ]
group_var <- vector("numeric", nrow(gcbs))
group_var[indices_EFA] <- 1
group_var[indices_CFA] <- 2
group_var
gcbs_grouped <- cbind(gcbs, group_var)
describeBy(gcbs_grouped, group = group_var)
statsBy(gcbs_grouped, group = "group_var")
lowerCor(gcbs)
corr.test(gcbs, use = "parwise.complete.obs")$p
corr.test(gcbs, use = "pairwise.complete.obs")$p
corr.test(gcbs, use = "pairwise.complete.obs")$ci
alpha(gcbs)
splitHalf(gcbs)
data(bfi)
str(bfi)
knitr::include_graphics("../Foto/bfi_FA.png")
knitr::include_graphics("../Foto/noTheory_FA.png")
bfi_EFA_cor <- cor(bfi_EFA, use = "pairwise.complete.obs")
```{r}
N <- nrow(bfi)
indices <- seq(1, N)
indices_EFA <- sample(indices, floor((.5*N)))
indices_CFA <- indices[!(indices %in% indices_EFA)]
bfi_EFA <- bfi[indices_EFA, ]
bfi_CFA <- bfi[indices_CFA, ]
bfi_EFA_cor <- cor(bfi_EFA, use = "pairwise.complete.obs")
bfi_EFA_cor
head(bfi_EFA_cor,15)
head(bfi_EFA_cor,2)
head(bfi_EFA_cor,4)
scree(bfi_EFA_cor, factors = FALSE)
knitr::include_graphics("../Foto/bfi_FA.png")
knitr::include_graphics("../Foto/eksp_FA.png")
EFA_model <- fa(bfi_EFA, nfactors = 6)
objectEFA_model
EFA_model
FA_model$loadings
EFA_model$loadings
head(EFA_model$scores)
EFA_model <- fa(bfi_EFA, nfactors = 6)
install.packages("GPArotation")
EFA_model <- fa(bfi_EFA, nfactors = 6)
EFA_model
knitr::include_graphics("../Foto/skica_FA.png")
EFA_syn <- structure.sem(EFA_model)
EFA_syn
head(EFA_syn,15)
NEU: N1, N2, N3, N4, N5     #NeuroticismOPE: O1, O2, O3, O4, O5     #Openness"
teoretski_model <- "
teoretski_model <- "
teoretski_model <- "
teoretski_model <- "
AGE: A1, A2, A3, A4, A5     #Agreeableness
CON: C1, C2, C3, C4, C5     #Conscientiousness
EXT: E1, E2, E3, E4, E5     #Extraversion
NEU: N1, N2, N3, N4, N5     #Neuroticism
OPE: O1, O2, O3, O4, O5     #Openness
"
theory_syn <- cfa(text = theory_syn_eq, reference.indicators = FALSE)
library(FactoMineR)
library(factoextra)
library(FactoMineR)
library(tidyverse)  # data manipulation and visualization
library(gridExtra)  # plot arrangement
library(patchwork)
library(ggplot2)
theory_syn <- cfa(text = theory_syn_eq, reference.indicators = FALSE)
library(lavaan)
install.packages("lavaan")
library(lavaan)
theory_syn <- cfa(text = theory_syn_eq, reference.indicators = FALSE)
theory_syn <- cfa(text = teoretski_model, reference.indicators = FALSE)
teoretski_model <- "
AGE: A1, A2, A3, A4, A5     #Agreeableness
CON: C1, C2, C3, C4, C5     #Conscientiousness
EXT: E1, E2, E3, E4, E5     #Extraversion
NEU: N1, N2, N3, N4, N5     #Neuroticism
OPE: O1, O2, O3, O4, O5     #Openness
"
theory_syn <- cfa(text = teoretski_model, reference.indicators = FALSE)
teoretski_model
teoretski_model <- "
teoretski_model <- "
AGE: A1, A2, A3, A4, A5
teoretski_model <- "
AGE: A1, A2, A3, A4, A5,
CON: C1, C2, C3, C4, C5,
EXT: E1, E2, E3, E4, E5,
NEU: N1, N2, N3, N4, N5,
OPE: O1, O2, O3, O4, O5,
"
theory_syn <- cfa(text = teoretski_model, reference.indicators = FALSE)
theory_syn_eq <- "
AGE: A1, A2, A3, A4, A5     #Agreeableness
CON: C1, C2, C3, C4, C5     #Conscientiousness
EXT: E1, E2, E3, E4, E5     #Extraversion
NEU: N1, N2, N3, N4, N5     #Neuroticism
OPE: O1, O2, O3, O4, O5     #Openness
"
theory_syn_eq
theory_syn <- cfa(text = theory_syn_eq, reference.indicators = FALSE)
theory_syn
theory_syn <- cfa(text = theory_syn_eq, reference.indicators = FALSE)
theory_syn_eq <- "
AGE=~ A1 + A2 + A3 + A4 + A5
CON=~ C1 + C2 + C3 + C4 + C5
EXT=~ E1 + E2 + E3 + E4 + E5
NEU=~ N1 + N2 + N3 + N4 + N5
OPE=~ O1 + O2 + O3 + O4 + O5
"
theory_syn <- cfa(text = theory_syn_eq, reference.indicators = FALSE)
EFA_model
EFA_syn <- structure.sem(EFA_model)
head(EFA_syn,15)
theory_syn <- cfa(text = theory_syn_eq, reference.indicators = FALSE)
theory_syn_eq <- '
AGE =~ A1 + A2 + A3 + A4 + A5
CON =~ C1 + C2 + C3 + C4 + C5
EXT =~ E1 + E2 + E3 + E4 + E5
NEU =~ N1 + N2 + N3 + N4 + N5
OPE =~ O1 + O2 + O3 + O4 + O5
'
theory_syn <- cfa(text = theory_syn_eq, reference.indicators = FALSE)
theory_syn <- cfa(text = theory_syn_eq, reference.indicators = FALSE, data = bfi)
HS.model <- ' visual  =~ x1 + x2 + x3
HS.model <- ' visual  =~ x1 + x2 + x3
HS.model <- ' visual  =~ x1 + x2 + x3
textual =~ x4 + x5 + x6
speed   =~ x7 + x8 + x9 '
fit <- cfa(HS.model, data = HolzingerSwineford1939)
fit
theory_syn
theory_syn_eq <- '
AGE =~ A1 + A2 + A3 + A4 + A5
CON =~ C1 + C2 + C3 + C4 + C5
EXT =~ E1 + E2 + E3 + E4 + E5
NEU =~ N1 + N2 + N3 + N4 + N5
OPE =~ O1 + O2 + O3 + O4 + O5
'
theory_syn <- cfa(text = theory_syn_eq, reference.indicators = FALSE)
?cfa
theory_syn_eq <- '
AGE =~ A1 + A2 + A3 + A4 + A5
CON =~ C1 + C2 + C3 + C4 + C5
EXT =~ E1 + E2 + E3 + E4 + E5
NEU =~ N1 + N2 + N3 + N4 + N5
OPE =~ O1 + O2 + O3 + O4 + O5
'
theory_syn <- cfa(theory_syn_eq, reference.indicators = FALSE)
theory_syn <- cfa(theory_syn_eq)
theory_syn
theory_syn_eq <- "
AGE: A1, A2, A3, A4, A5 #Agreeableness
CON: C1, C2, C3, C4, C5 #Conscientiousness
EXT: E1, E2, E3, E4, E5 #Extraversion
NEU: N1, N2, N3, N4, N5 #Neuroticism
OPE: O1, O2, O3, O4, O  #Openness
"
theory_syn <- sem::cfa(text = theory_syn_eq, reference.indicators = FALSE)
library(sem)
install.packages("sem")
library(sem)
theory_syn <- sem::cfa(text = theory_syn_eq, reference.indicators = FALSE)
theory_syn
theory_CFA <- sem(theory_syn, data = bfi_CFA)
theory_CFA <- sem::sem(theory_syn, data = bfi_CFA)
theory_CFA <- lavaan::sem(theory_syn, data = bfi_CFA)
theory_CFA <- sem(theory_syn, data = bfi_CFA)
str(bfi_CFA)
as.matrix(bfi_CFA)
theory_CFA <- sem(theory_syn, data = as.matrix(bfi_CFA))
theory_CFA <- sem(theory_syn, data = bfi_CFA)
str(theory_syn)
theory_CFA <- sem(theory_syn_eq, data = bfi_CFA)
theory_syn <- sem::cfa(text = theory_syn_eq, reference.indicators = FALSE)
theory_CFA <- sem(theory_syn, data = bfi_CFA)
EFA_CFA <- sem(EFA_syn, data = bfi_CFA)s
EFA_CFA <- sem(EFA_syn, data = bfi_CFA)
summary(EFA_CFA)$BIC
EFA_syn
library(sem)
theory_CFA <- sem(theory_syn, data = bfi_CFA)
options(htmltools.dir.version = FALSE)
library(knitr)
opts_chunk$set(
fig.align="center", #fig.width=6, fig.height=4.5,
# out.width="748px", #out.length="520.75px",
dpi=300, #fig.path='Figs/',
cache=F#, echo=F, warning=F, message=F
)
knitr::include_graphics("../Foto/skica_FA.png")
knit_gv('
Factor -> a
Factor -> b
Factor -> c
Factor -> d
a[shape=rectangle]
b[shape=rectangle]
c[shape=rectangle]
d[shape=rectangle]
')
install.packages("DiagrammeR")
install.packages("DiagrammeRsvg")
library(DiagrammeR)
library(DiagrammeRsvg)
knit_gv <- function(code, filename=NULL, width=NULL, height=800){
assetpath <- "assets"
dir.create(assetpath, showWarnings = F)
if (!is.character(knitr::current_input())){
format <- "png"
} else {
if (stringr::str_detect(
knitr::opts_knit$get("rmarkdown.pandoc.to"), "beamer|latex|pdf")) {
format <- "pdf"
} else {
format <- "png"
}
}
if (!is.character(filename)){
filename <- file.path(assetpath, paste0(sample(1e6:1e7, 1), ".", format))
} else {
filename = paste0(filename, ".", format)
}
library('rsvg')
outfun <- get(paste0("rsvg_", format))
capture.output({
g <- grViz(paste("digraph{", code, "}"))
DiagrammeRsvg::export_svg(g) %>% charToRaw %>% outfun(filename, width=width, height=height)
},  file='NUL')
knitr::include_graphics(filename)
}
knit_gv('
Factor -> a
Factor -> b
Factor -> c
Factor -> d
a[shape=rectangle]
b[shape=rectangle]
c[shape=rectangle]
d[shape=rectangle]
')
install.packages("rsvg")
knit_gv('
Factor -> a
Factor -> b
Factor -> c
Factor -> d
a[shape=rectangle]
b[shape=rectangle]
c[shape=rectangle]
d[shape=rectangle]
')
knit_gv('
Affective -> a
Affective -> b
Affective -> c
Cognitive -> d
Cognitive -> e
Cognitive -> f
Affective -> Cognitive:nw [dir=both]
a [shape=box]
b [shape=box]
c [shape=box]
d [shape=box]
e [shape=box]
f [shape=box]
')
library(FactoMineR)
library(factoextra)
library(FactoMineR)
library(tidyverse)  # data manipulation and visualization
library(gridExtra)  # plot arrangement
library(patchwork)
library(ggplot2)
library(lavaan)
library(sem)
hz <- lavaan::HolzingerSwineford1939
hz %>% glimpse()
hz.model <- '
visual =~ x1 + x2 + x3
writing =~ x4 + x5 + x6
maths =~ x7 + x8 + x9'
semPlot::semPaths(hz.fit)
install.packages("semPlot")
library(semPlot)
semPlot::semPaths(hz.fit)
hz.fit <- cfa(hz.model, data=hz)
hz.model <- '
visual =~ x1 + x2 + x3
writing =~ x4 + x5 + x6
maths =~ x7 + x8 + x9
'
hz.fit <- cfa(hz.model, data=hz)
hz <- lavaan::HolzingerSwineford1939
hz %>% glimpse()
hz.fit <- cfa(hz.model, data=hz)
hz.fit <- sem::cfa(hz.model, data=hz)
hz.model
hz.fit <- lavaan::cfa(hz.model, data=hz)
summary(hz.fit, standardized=TRUE)
semPlot::semPaths(hz.fit)
semPlot::semPaths(hz.fit, "std")
fitmeasures(hz.fit, c('cfi', 'rmsea', 'rmsea.ci.upper', 'bic'))
hz %>% dplyr::glimpse()
lavaan::fitmeasures(hz.fit, c('cfi', 'rmsea', 'rmsea.ci.upper', 'bic'))
# Procedura razvoja konstrukta
<br>
<br>
- Odredi elemente konstrukta
- Prikupi podatke
- Upoznaj se sa podatcima
- Odluka što koristiti EFA, CFA ili obje analize
- Podijeli uzorak u dva (slučajna; *random*) dijela (za obje)
- Usporedi uzorke
dplyr::describe(gcbs)
psych::describe(gcbs)
options(htmltools.dir.version = FALSE)
library(knitr)
opts_chunk$set(
fig.align="center", #fig.width=6, fig.height=4.5,
# out.width="748px", #out.length="520.75px",
dpi=300, #fig.path='Figs/',
cache=F#, echo=F, warning=F, message=F
)
hz <- lavaan::HolzingerSwineford1939
hz %>% dplyr::glimpse()
library(FactoMineR)
library(factoextra)
library(FactoMineR)
library(tidyverse)  # data manipulation and visualization
library(gridExtra)  # plot arrangement
library(patchwork)
library(ggplot2)
library(lavaan)
library(sem)
library(semPlot)
library(tidyverse)
library(dplyr)
hz %>% dplyr::glimpse()
hz.model <- '
visual =~ x1 + x2 + x3
writing =~ x4 + x5 + x6
maths =~ x7 + x8 + x9
'
hz.fit <- lavaan::cfa(hz.model, data=hz)
summary(hz.fit, standardized=TRUE)
hz.fit
summary(hz.fit, standardized=TRUE)
hz.fit
summary(hz.fit)
lavaan::cfa(hz.model, data=hz)
hz.fit
lavaan::summary(hz.fit, fit.measures=TRUE)
**Format predavanja:** [.html](https://github.com/lusiki/WebMultiVar/blob/main/Predavanja/05_FA.html) | [.Rmd](https://github.com/lusiki/WebMultiVar/blob/main/Predavanja/05_FA.Rmd)
<br>
**Čitanje:** [Faktorska analiza]("../Literatura/Faktorska_analiza.pdf") + []()
options(htmltools.dir.version = FALSE)
library(knitr)
opts_chunk$set(
fig.align="center", #fig.width=6, fig.height=4.5,
# out.width="748px", #out.length="520.75px",
dpi=300, #fig.path='Figs/',
cache=F#, echo=F, warning=F, message=F
)
data(bfi)
library(FactoMineR)
library(factoextra)
library(FactoMineR)
library(tidyverse)  # data manipulation and visualization
library(gridExtra)  # plot arrangement
library(patchwork)
library(ggplot2)
library(lavaan)
library(sem)
library(semPlot)
library(tidyverse)
library(dplyr)
data(bfi)
# učitaj paket
library(psych)
data(bfi)
names(bfi)
# Faktorabilnost
<br>
<br>
.pull-left[
- `Barlett sphericity` test (BS)
bfi_hetcor <- hetcor(bfi[,1:25])
library(polycor)
install.packages("polycor")
library(polycor)
# Faktorabilnost
<br>
<br>
.pull-left[
- `Barlett sphericity` test (BS)
bfi_hetcor <- ploycor::hetcor(bfi[,1:25])
# Faktorabilnost
<br>
<br>
.pull-left[
- `Barlett sphericity` test (BS)
bfi_hetcor <- polycor::hetcor(bfi[,1:25])
bfi_faktorablinost <- cortest.bartlett(bfi_c) # Barlett test
bfi_c <- bfi_hetcor$correlations # kor- matrica
bfi_faktorablinost <- cortest.bartlett(bfi_c) # Barlett test
bfi_c
bfi_c <- bfi_hetcor$correlations # kor- matrica
bfi_faktorablinost <- cortest.bartlett(bfi_c) # Barlett test
bfi_c
bfi_c$chisq
bfi_faktorablinost
KMO(bfi_c)
library(GPArotation))
library(GPArotation)
library(GPArotation)
``{r}
# EFA sa 3 faktora
f_bfi_minres <- fa(bfi_c,nfactors = 3,rotate = "none")
# Sortiraj komunalnosti
f_bfi_minres_common <- sort(f_bfi_minres$communality,decreasing = TRUE)
# Pregled
data.frame(f_bfi_minres_common)
# Sortiraj jedinstvenosti
f_bfi_minres_unique <- sort(f_bfi_minres$uniqueness,decreasing = TRUE)
# Pregled
data.frame(f_bfi_minres_unique)
?fe
??fe
# MLE factor extraction.
f_bfi_mle <- fa(bfi_c, nfactors = 3, fm ="ml"
# Sorted communality of the f_bfi_mle.
f_bfi_mle_common <- sort(
# MLE ekstrakcija
f_bfi_mle <- fa(bfi_c, nfactors = 3, fm ="ml"
# Sortiraj komunalnost
f_bfi_mle_common <- sort(f_bfi_mle$communality,decreasing = TRUE)
# Sortiraj komunalnost
f_bfi_mle_common <- sort(f_bfi_mle$communality,decreasing = TRUE)
# MLE ekstrakcija
f_bfi_mle <- fa(bfi_c, nfactors = 3, fm ="ml")
# Sortiraj komunalnost
f_bfi_mle_common <- sort(f_bfi_mle$communality,decreasing = TRUE)
# Pregled
data.frame(f_bfi_mle_common)
fa.parallel(bfi_c, n.obs = 200,fa = "fa", fm = "minres")
fa.parallel(bfi_c, n.obs = 200,fa = "fa", fm = "mle") # MLE metoda
knitr::include_graphics("../Foto/roto_FA.png")
f_bfi_varimax <- fa(bfi_c,fm = "minres",nfactors = 5,rotate = "varimax")
f_bfi_varimax
```{r, include=TRUE, fig.align="center", echo=FALSE, out.width="350px"}
knitr::include_graphics("../Foto/varimax_FA.png")
knitr::include_graphics("../Foto/varimax_FA.png")
knitr::include_graphics("../Foto/varimax_FA.png")
knitr::include_graphics("../Foto/varimax_FA.png")
fa.diagram(f_bfi_varimax)
print(f_bfi_varimax$loadings, cut=0)
