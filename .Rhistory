# Prikaži prve dvije PC komponente grafički
ggplot2:: ggplot(PC, aes(PC1,PC2)) +
modelr:: geom_ref_line(h=0) +
modelr:: geom_ref_line(v= 0) +
geom_text(aes(label = GEO), size = 2, position=position_jitter(width=2,height=2)) +
xlab("PC1") +
ylab("PC2") +
ggtitle("Prve dvije glavne komponente za USArrests podatkovni okvir") +
theme_grey(base_size = 10)  -> USArViz
USArViz
# Prikaži prve dvije PC komponente grafički
ggplot2:: ggplot(PC, aes(PC1,PC2)) +
modelr:: geom_ref_line(h=0) +
modelr:: geom_ref_line(v= 0) +
geom_text(aes(label = GEO), size = 1, position=position_jitter(width=2,height=2)) +
xlab("PC1") +
ylab("PC2") +
ggtitle("Prve dvije glavne komponente za USArrests podatkovni okvir") +
theme_grey(base_size = 10)  -> USArViz
USArViz
# Prikaži prve dvije PC komponente grafički
ggplot2:: ggplot(PC, aes(PC1,PC2)) +
modelr:: geom_ref_line(h=0) +
modelr:: geom_ref_line(v= 0) +
geom_text(aes(label = GEO), size = 1.3, position=position_jitter(width=2,height=2)) +
xlab("PC1") +
ylab("PC2") +
ggtitle("Prve dvije glavne komponente za USArrests podatkovni okvir") +
theme_grey(base_size = 10)  -> USArViz
USArViz
# Prikaži prve dvije PC komponente grafički
ggplot2:: ggplot(PC, aes(PC1,PC2)) +
modelr:: geom_ref_line(h=0) +
modelr:: geom_ref_line(v= 0) +
geom_text(aes(label = GEO), size = 1.5, position=position_jitter(width=2,height=2)) +
xlab("PC1") +
ylab("PC2") +
ggtitle("Prve dvije glavne komponente za USArrests podatkovni okvir") +
theme_grey(base_size = 10)  -> USArViz
USArViz
# Prikaži prve dvije PC komponente grafički
ggplot2:: ggplot(PC, aes(PC1,PC2)) +
modelr:: geom_ref_line(h=0) +
modelr:: geom_ref_line(v= 0) +
geom_text(aes(label = GEO), size = 2, position=position_jitter(width=2,height=2)) +
xlab("PC1") +
ylab("PC2") +
ggtitle("Prve dvije glavne komponente za USArrests podatkovni okvir") +
theme_grey(base_size = 10)  -> USArViz
USArViz
# Prikaži prve dvije PC komponente grafički
ggplot2:: ggplot(PC, aes(PC1,PC2)) +
modelr:: geom_ref_line(h=0) +
modelr:: geom_ref_line(v= 0) +
geom_text(aes(label = GEO), size = 2, position=position_jitter(width=3,height=2)) +
xlab("PC1") +
ylab("PC2") +
ggtitle("Prve dvije glavne komponente za USArrests podatkovni okvir") +
theme_grey(base_size = 10)  -> USArViz
USArViz
# Prikaži prve dvije PC komponente grafički
ggplot2:: ggplot(PC, aes(PC1,PC2)) +
modelr:: geom_ref_line(h=0) +
modelr:: geom_ref_line(v= 0) +
geom_text(aes(label = GEO), size = 2, position=position_jitter(width=4,height=2)) +
xlab("PC1") +
ylab("PC2") +
ggtitle("Prve dvije glavne komponente za USArrests podatkovni okvir") +
theme_grey(base_size = 10)  -> USArViz
USArViz
# Prikaži prve dvije PC komponente grafički
ggplot2:: ggplot(PC, aes(PC1,PC2)) +
modelr:: geom_ref_line(h=0) +
modelr:: geom_ref_line(v= 0) +
geom_text(aes(label = GEO), size = 2, position=position_jitter(width=1,height=2)) +
xlab("PC1") +
ylab("PC2") +
ggtitle("Prve dvije glavne komponente za USArrests podatkovni okvir") +
theme_grey(base_size = 10)  -> USArViz
USArViz
# Prikaži prve dvije PC komponente grafički
ggplot2:: ggplot(PC, aes(PC1,PC2)) +
modelr:: geom_ref_line(h=0) +
modelr:: geom_ref_line(v= 0) +
geom_text(aes(label = GEO), size = 2, position=position_jitter(width=1,height=3)) +
xlab("PC1") +
ylab("PC2") +
ggtitle("Prve dvije glavne komponente za USArrests podatkovni okvir") +
theme_grey(base_size = 10)  -> USArViz
USArViz
# Prikaži prve dvije PC komponente grafički
ggplot2:: ggplot(PC, aes(PC1,PC2)) +
modelr:: geom_ref_line(h=0) +
modelr:: geom_ref_line(v= 0) +
geom_text(aes(label = GEO), size = 2, position=position_jitter(width=1.5,height=3)) +
xlab("PC1") +
ylab("PC2") +
ggtitle("Prve dvije glavne komponente za USArrests podatkovni okvir") +
theme_grey(base_size = 10)  -> USArViz
USArViz
# Prikaži prve dvije PC komponente grafički
ggplot2:: ggplot(PC, aes(PC1,PC2)) +
modelr:: geom_ref_line(h=0) +
modelr:: geom_ref_line(v= 0) +
geom_text(aes(label = GEO), size = 2, position=position_jitter(width=1,height=1)) +
xlab("PC1") +
ylab("PC2") +
ggtitle("Prve dvije glavne komponente za USArrests podatkovni okvir") +
theme_grey(base_size = 10)  -> USArViz
USArViz
# Prikaži prve dvije PC komponente grafički
ggplot2:: ggplot(PC, aes(PC1,PC2)) +
modelr:: geom_ref_line(h=0) +
modelr:: geom_ref_line(v= 0) +
geom_text(aes(label = GEO), size = 2, position=position_jitter(width=1,height=2)) +
xlab("PC1") +
ylab("PC2") +
ggtitle("Prve dvije glavne komponente za USArrests podatkovni okvir") +
theme_grey(base_size = 10)  -> USArViz
USArViz
# Prikaži prve dvije PC komponente grafički
ggplot2:: ggplot(PC, aes(PC1,PC2)) +
modelr:: geom_ref_line(h=0) +
modelr:: geom_ref_line(v= 0) +
geom_text(aes(label = GEO), size = 1.5, position=position_jitter(width=1,height=2)) +
xlab("PC1") +
ylab("PC2") +
ggtitle("Prve dvije glavne komponente za USArrests podatkovni okvir") +
theme_grey(base_size = 10)  -> USArViz
USArViz
# Prikaži prve dvije PC komponente grafički
ggplot2:: ggplot(PC, aes(PC1,PC2)) +
modelr:: geom_ref_line(h=0) +
modelr:: geom_ref_line(v= 0) +
geom_text(aes(label = GEO), size = 1.5) +
xlab("PC1") +
ylab("PC2") +
ggtitle("Prve dvije glavne komponente za USArrests podatkovni okvir") +
theme_grey(base_size = 10)  -> USArViz
USArViz
# Prikaži prve dvije PC komponente grafički
ggplot2:: ggplot(PC, aes(PC1,PC2)) +
modelr:: geom_ref_line(h=0) +
modelr:: geom_ref_line(v= 0) +
geom_text(aes(label = GEO), size = 1.5, position=position_jitter(height=2)) +
xlab("PC1") +
ylab("PC2") +
ggtitle("Prve dvije glavne komponente za USArrests podatkovni okvir") +
theme_grey(base_size = 10)  -> USArViz
USArViz
# Prikaži prve dvije PC komponente grafički
ggplot2:: ggplot(PC, aes(PC1,PC2)) +
modelr:: geom_ref_line(h=0) +
modelr:: geom_ref_line(v= 0) +
geom_text(aes(label = GEO), size = 1.5, position=position_jitter(height=2.5)) +
xlab("PC1") +
ylab("PC2") +
ggtitle("Prve dvije glavne komponente za USArrests podatkovni okvir") +
theme_grey(base_size = 10)  -> USArViz
USArViz
# Prikaži prve dvije PC komponente grafički
ggplot2:: ggplot(PC, aes(PC1,PC2)) +
modelr:: geom_ref_line(h=0) +
modelr:: geom_ref_line(v= 0) +
geom_text(aes(label = GEO), size = 1.5, position=position_jitter(width = 2.5)) +
xlab("PC1") +
ylab("PC2") +
ggtitle("Prve dvije glavne komponente za USArrests podatkovni okvir") +
theme_grey(base_size = 10)  -> USArViz
USArViz
# Prikaži prve dvije PC komponente grafički
ggplot2:: ggplot(PC, aes(PC1,PC2)) +
modelr:: geom_ref_line(h=0) +
modelr:: geom_ref_line(v= 0) +
geom_text(aes(label = GEO), size = 1.5, position=position_jitter(width = 2)) +
xlab("PC1") +
ylab("PC2") +
ggtitle("Prve dvije glavne komponente za USArrests podatkovni okvir") +
theme_grey(base_size = 10)  -> USArViz
USArViz
# Prikaži prve dvije PC komponente grafički
ggplot2:: ggplot(PC, aes(PC1,PC2)) +
modelr:: geom_ref_line(h=0) +
modelr:: geom_ref_line(v= 0) +
geom_text(aes(label = GEO), size = 1.5) +
xlab("PC1") +
ylab("PC2") +
ggtitle("Prve dvije glavne komponente za USArrests podatkovni okvir") +
theme_grey(base_size = 10)  -> USArViz
USArViz
## PROVEDI PROCEDURU PUTEM FORMULA ##
PCA_fun <- prcomp(USArrests, scale = T)
names(PCA_fun) # Pregledaj objekt
# Pogledaj prosjek komponenti po varijablama
PCA_fun$center
# Pogledaj stdev komponenti po varijablama
PCA_fun$scale
# Pogledaj opterećenja
PCA_fun$rotation
# Promjeni predznak
PCA_fun$rotation <- -PCA_fun$rotation
PCA_fun$rotation
# Izračunaj koeficijente
PCA_fun$x <- -PCA_fun$x
head(PCA_fun$x)
biplot(PCA_fun, scale = 0) # Vizualiziraj
PCbiplot <- function(PC, x="PC1", y="PC2") {
# PC being a prcomp object
data <- data.frame(obsnames=row.names(PC$x), PC$x)
plot <- ggplot(data, aes_string(x=x, y=y)) + geom_text(alpha=.4, size=3, aes(label=obsnames))
plot <- plot + geom_hline(aes(0), size=.2) + geom_vline(aes(0), size=.2)
datapc <- data.frame(varnames=rownames(PC$rotation), PC$rotation)
mult <- min(
(max(data[,y]) - min(data[,y])/(max(datapc[,y])-min(datapc[,y]))),
(max(data[,x]) - min(data[,x])/(max(datapc[,x])-min(datapc[,x])))
)
datapc <- transform(datapc,
v1 = .7 * mult * (get(x)),
v2 = .7 * mult * (get(y))
)
plot <- plot + coord_equal() + geom_text(data=datapc, aes(x=v1, y=v2, label=varnames), size = 5, vjust=1, color="red")
plot <- plot + geom_segment(data=datapc, aes(x=0, y=0, xend=v1, yend=v2), arrow=arrow(length=unit(0.2,"cm")), alpha=0.75, color="red")
plot
}
obj <- biplot(PCA_fun, scale = 0) # Vizualiziraj
PCbiplot(obj)
PCbiplot(PCA_fun)
biplot(PCA_fun, scale = 0) # Vizualiziraj
PCbiplot <- function(PC, x="PC1", y="PC2") {
# PC being a prcomp object
data <- data.frame(obsnames=row.names(PC$x), PC$x)
plot <- ggplot(data, aes_string(x=x, y=y)) + geom_text(alpha=.4, size=3, aes(label=obsnames))
plot <- plot + geom_hline(aes(0), size=.2) + geom_vline(aes(0), size=.2)
datapc <- data.frame(varnames=rownames(PC$rotation), PC$rotation)
mult <- min(
(max(data[,y]) - min(data[,y])/(max(datapc[,y])-min(datapc[,y]))),
(max(data[,x]) - min(data[,x])/(max(datapc[,x])-min(datapc[,x])))
)
datapc <- transform(datapc,
v1 = .7 * mult * (get(x)),
v2 = .7 * mult * (get(y))
)
plot <- plot + coord_equal() + geom_text(data=datapc, aes(x=v1, y=v2, label=varnames), size = 5, vjust=1, color="red")
plot <- plot + geom_segment(data=datapc, aes(x=0, y=0, xend=v1, yend=v2), arrow=arrow(length=unit(0.2,"cm")), alpha=0.75, color="red")
plot
}
PCbiplot(PCA_fun)
PCbiplot <- function(PC, x="PC1", y="PC2") {
# PC being a prcomp object
data <- data.frame(obsnames=row.names(PC$x), PC$x)
plot <- ggplot(data, aes_string(x=x, y=y)) + geom_text(alpha=.4, size=3, aes(label=obsnames))
plot <- plot + geom_hline() + geom_vline()
datapc <- data.frame(varnames=rownames(PC$rotation), PC$rotation)
mult <- min(
(max(data[,y]) - min(data[,y])/(max(datapc[,y])-min(datapc[,y]))),
(max(data[,x]) - min(data[,x])/(max(datapc[,x])-min(datapc[,x])))
)
datapc <- transform(datapc,
v1 = .7 * mult * (get(x)),
v2 = .7 * mult * (get(y))
)
plot <- plot + coord_equal() + geom_text(data=datapc, aes(x=v1, y=v2, label=varnames), size = 5, vjust=1, color="red")
plot <- plot + geom_segment(data=datapc, aes(x=0, y=0, xend=v1, yend=v2), arrow=arrow(length=unit(0.2,"cm")), alpha=0.75, color="red")
plot
}
PCbiplot(PCA_fun)
PCbiplot <- function(PC, x="PC1", y="PC2") {
# PC being a prcomp object
data <- data.frame(obsnames=row.names(PC$x), PC$x)
plot <- ggplot(data, aes_string(x=x, y=y)) + geom_text(alpha=.4, size=3, aes(label=obsnames))
datapc <- data.frame(varnames=rownames(PC$rotation), PC$rotation)
mult <- min(
(max(data[,y]) - min(data[,y])/(max(datapc[,y])-min(datapc[,y]))),
(max(data[,x]) - min(data[,x])/(max(datapc[,x])-min(datapc[,x])))
)
datapc <- transform(datapc,
v1 = .7 * mult * (get(x)),
v2 = .7 * mult * (get(y))
)
plot <- plot + coord_equal() + geom_text(data=datapc, aes(x=v1, y=v2, label=varnames), size = 5, vjust=1, color="red")
plot <- plot + geom_segment(data=datapc, aes(x=0, y=0, xend=v1, yend=v2), arrow=arrow(length=unit(0.2,"cm")), alpha=0.75, color="red")
plot
}
PCbiplot(PCA_fun)
plot <- ggplot(data, aes_string(x=x, y=y)) + geom_text(alpha=.8, size=2, aes(label=obsnames))
# funkcija za ljepši biplot
PCbiplot <- function(PC, x="PC1", y="PC2") {
# PC being a prcomp object
data <- data.frame(obsnames=row.names(PC$x), PC$x)
plot <- ggplot(data, aes_string(x=x, y=y)) + geom_text(alpha=.8, size=2, aes(label=obsnames))
datapc <- data.frame(varnames=rownames(PC$rotation), PC$rotation)
mult <- min(
(max(data[,y]) - min(data[,y])/(max(datapc[,y])-min(datapc[,y]))),
(max(data[,x]) - min(data[,x])/(max(datapc[,x])-min(datapc[,x])))
)
datapc <- transform(datapc,
v1 = .7 * mult * (get(x)),
v2 = .7 * mult * (get(y))
)
plot <- plot + coord_equal() + geom_text(data=datapc, aes(x=v1, y=v2, label=varnames), size = 5, vjust=1, color="red")
plot <- plot + geom_segment(data=datapc, aes(x=0, y=0, xend=v1, yend=v2), arrow=arrow(length=unit(0.2,"cm")), alpha=0.75, color="red")
plot
}
# Vizualiziraj
# biplot(PCA_fun, scale = 0) bi se koristio uobičajeno
PCbiplot(PCA_fun) # custom made funkcija; vidi .Rmd
# funkcija za ljepši biplot
PCbiplot <- function(PC, x="PC1", y="PC2") {
# PC being a prcomp object
data <- data.frame(obsnames=row.names(PC$x), PC$x)
plot <- ggplot(data, aes_string(x=x, y=y)) + geom_text(alpha=.99, size=2, aes(label=obsnames))
datapc <- data.frame(varnames=rownames(PC$rotation), PC$rotation)
mult <- min(
(max(data[,y]) - min(data[,y])/(max(datapc[,y])-min(datapc[,y]))),
(max(data[,x]) - min(data[,x])/(max(datapc[,x])-min(datapc[,x])))
)
datapc <- transform(datapc,
v1 = .7 * mult * (get(x)),
v2 = .7 * mult * (get(y))
)
plot <- plot + coord_equal() + geom_text(data=datapc, aes(x=v1, y=v2, label=varnames), size = 5, vjust=1, color="red")
plot <- plot + geom_segment(data=datapc, aes(x=0, y=0, xend=v1, yend=v2), arrow=arrow(length=unit(0.2,"cm")), alpha=0.75, color="red")
plot
}
# funkcija za ljepši biplot
PCbiplot <- function(PC, x="PC1", y="PC2") {
# PC being a prcomp object
data <- data.frame(obsnames=row.names(PC$x), PC$x)
plot <- ggplot(data, aes_string(x=x, y=y)) + geom_text(alpha=.99, size=0.8, aes(label=obsnames))
datapc <- data.frame(varnames=rownames(PC$rotation), PC$rotation)
mult <- min(
(max(data[,y]) - min(data[,y])/(max(datapc[,y])-min(datapc[,y]))),
(max(data[,x]) - min(data[,x])/(max(datapc[,x])-min(datapc[,x])))
)
datapc <- transform(datapc,
v1 = .7 * mult * (get(x)),
v2 = .7 * mult * (get(y))
)
plot <- plot + coord_equal() + geom_text(data=datapc, aes(x=v1, y=v2, label=varnames), size = 5, vjust=1, color="red")
plot <- plot + geom_segment(data=datapc, aes(x=0, y=0, xend=v1, yend=v2), arrow=arrow(length=unit(0.2,"cm")), alpha=0.75, color="red")
plot
}
# funkcija za ljepši biplot
PCbiplot <- function(PC, x="PC1", y="PC2") {
# PC being a prcomp object
data <- data.frame(obsnames=row.names(PC$x), PC$x)
plot <- ggplot(data, aes_string(x=x, y=y)) + geom_text(alpha=.99, size=0.8, aes(label=obsnames))
datapc <- data.frame(varnames=rownames(PC$rotation), PC$rotation)
mult <- min(
(max(data[,y]) - min(data[,y])/(max(datapc[,y])-min(datapc[,y]))),
(max(data[,x]) - min(data[,x])/(max(datapc[,x])-min(datapc[,x])))
)
datapc <- transform(datapc,
v1 = .7 * mult * (get(x)),
v2 = .7 * mult * (get(y))
)
plot <- plot + coord_equal() + geom_text(data=datapc, aes(x=v1, y=v2, label=varnames), size = 3, vjust=1, color="red")
plot <- plot + geom_segment(data=datapc, aes(x=0, y=0, xend=v1, yend=v2), arrow=arrow(length=unit(0.2,"cm")), alpha=0.75, color="red")
plot
}
# Vizualiziraj
# biplot(PCA_fun, scale = 0) # standardna funkcija
PCbiplot(PCA_fun) # custom made funkcija; vidi .Rmd
## PROVEDI PROCEDURU PUTEM FORMULA ##
PCA_fun <- stats::prcomp(USArrests, scale = T)
# Provedi PCA
procjena_PCA <- FactoMineR::PCA(decathlon2.active, graph = F)
# Vidi niže za detaljnjiji opis
# Podatci
data(decathlon2)
head(decathlon2, 5)
# Vidi niže za detaljnjiji opis
# Podatci
data(decathlon2)
head(decathlon2, 5)
library(FactoMineR)
library(factoextra)
library(FactoMineR)
library(tidyverse)  # data manipulation and visualization
library(gridExtra)  # plot arrangement
library(patchwork)
library(ggplot2)
# Vidi niže za detaljnjiji opis
# Podatci
data(decathlon2)
# Definiraj podatke za analizu
decathlon2.active <- decathlon2[1:23, 1:10]
print(procjena_PCA)
# Provedi PCA
procjena_PCA <- FactoMineR::PCA(decathlon2.active, graph = F)
print(procjena_PCA)
# Izvuci svojstvene vrijednosti
svojstvene_vrijednosti <- get_eigenvalue(procjena_PCA)
# Prikaži grafički
fviz_eig(procjena_PCA, addlabels = T, ylim = c(0,45))
# Prikaži grafički
factoextra::fviz_eig(procjena_PCA, addlabels = T, ylim = c(0,45))
# Prikaži grafički
factoextra::fviz_eig(procjena_PCA, addlabels = T, ylim = c(0,45))
# Izvuci svojstvene vrijednosti
svojstvene_vrijednosti <- factoextra::get_eigenvalue(procjena_PCA)
print(svojstvene_vrijednosti)
## VARIJABLE ##
vars <- factoextra::get_pca_var(procjena_PCA)
# Prikaži varijable u prostoru glavnih komponenti
factoextra::fviz_pca_var(procjena_PCA, col.var = "contrib")
# Prikaži varijable u prostoru glavnih komponenti
factoextra::fviz_pca_var(procjena_PCA, col.var = "contrib")+
theme(text = element_text(size = 7.5),
axis.title = element_text(size = 7.5),
axis.text = element_text(size = 7.5))
# Prikaži varijable u prostoru glavnih komponenti
factoextra::fviz_pca_var(procjena_PCA, col.var = "contrib")+
theme(text = element_text(size = 3),
axis.title = element_text(size = 7.5),
axis.text = element_text(size = 7.5))
# Prikaži varijable u prostoru glavnih komponenti
factoextra::fviz_pca_var(procjena_PCA, col.var = "contrib")+
theme(text = element_text(size = 1),
axis.title = element_text(size = 7.5),
axis.text = element_text(size = 7.5))
# Prikaži varijable u prostoru glavnih komponenti
factoextra::fviz_pca_var(procjena_PCA, col.var = "contrib")+
theme(text = element_text(size = 1))
# Prikaži varijable u prostoru glavnih komponenti
factoextra::fviz_pca_var(procjena_PCA, col.var = "contrib")+
theme(text = element_text(size = 5),
axis.title = element_text(size = 7.5),
axis.text = element_text(size = 7.5))
# Prikaži varijable u prostoru glavnih komponenti
factoextra::fviz_pca_var(procjena_PCA, col.var = "contrib")+
theme(text = element_text(size = 5))
# Prikaži varijable u prostoru glavnih komponenti
factoextra::fviz_pca_var(procjena_PCA, col.var = "contrib")+
theme(text = element_text(size = 5),
axis.title = element_text(size = 2),
axis.text = element_text(size = 7.5))
# Prikaži varijable u prostoru glavnih komponenti
factoextra::fviz_pca_var(procjena_PCA, col.var = "contrib")+
theme(text = element_text(size = 5),
axis.title = element_text(size = 2),
axis.text = element_text(size =2))
# Prikaži varijable u prostoru glavnih komponenti
factoextra::fviz_pca_var(procjena_PCA, col.var = "contrib", labelsize = 3)+
theme(text = element_text(size = 5),
axis.title = element_text(size = 2),
axis.text = element_text(size =2))
# Prikaži varijable u prostoru glavnih komponenti
factoextra::fviz_pca_var(procjena_PCA, col.var = "contrib", labelsize = 3)
# Prikaži varijable u prostoru glavnih komponenti
factoextra::fviz_pca_var(procjena_PCA, col.var = "contrib", labelsize = 2)
# Prikaži na stupčastom grafikonu
factoextra::fviz_contrib(procjena_PCA, choice = "var", axses = 1, top = 10)
fviz_pca_var(procjena_PCA, col.var = group, labelsize = 2,
palette = c("#0073C2FF", "#EFC000FF", "#868686FF"),
legend.title = "cluster")
group_km <- kmeans(vars$coord, centers = 3, nstart = 25)
group <- as.factor(group_km$cluster)
fviz_pca_var(procjena_PCA, col.var = group, labelsize = 2,
palette = c("#0073C2FF", "#EFC000FF", "#868686FF"),
legend.title = "cluster")
factoextra::fviz_pca_var(procjena_PCA, col.var = group, labelsize = 2,
palette = c("#0073C2FF", "#EFC000FF", "#868686FF"),
legend.title = "cluster")
## OPIS DIMENZIJA ##
opis_PCA <- dimdesc(procjena_PCA, axes = c(1,2), proba = 0.05)
head(opis_PCA,10)
## OPIS DIMENZIJA ##
opis_PCA <- FactoMineR::dimdesc(procjena_PCA, axes = c(1,2), proba = 0.05)
head(opis_PCA,10)
inds <- factoextra::get_pca_ind(procjena_PCA) # Stvori IE objekt
# Prikaži doprinos IE
factoextra::fviz_pca_ind(procjena_PCA, col.ind = "cos2",gradient.cols = c("#00AFBB", "#E7B800","#FC4E07"),repel = TRUE)
# Prikaži doprinos IE
factoextra::fviz_pca_ind(procjena_PCA, col.ind = "cos2",gradient.cols = c("#00AFBB", "#E7B800","#FC4E07"),repel = TRUE, labelsize = 3 )
# Prikaži doprinos IE na stupčastom grafikonu
factoextra::fviz_cos2(procjena_PCA, choice = "ind")
factoextra::fviz_cos2(procjena_PCA, choice = "ind",
axses = 1:2) # Prve dvije dimenzije
data(iris)
head(iris,10) # Pogledaj podatke
# Provedi PCA
iris_PCA <- FactoMineR::PCA(iris[,-5], graph = F)
iris_PCA
# Vizualizacija 1
factoextra::fviz_pca_ind(iris_PCA,
geom.ind = "point",
col.ind = iris$Species,
addEllipses = T,
legend.title = "Grupa",
palette = c("#00AFBB", "#E7B800", "#FC4E07"))
# Vizualizacija 2
factoextra::fviz_pca_biplot(iris_PCA,
geom.ind = "point",
col.ind = iris$Species,
addEllipses = T,
legend.title = "Grupa",
palette = "jco",
col.var = "black",
label = "var",
repel = T)
# Vizualizacija 2
factoextra::fviz_pca_biplot(iris_PCA,
geom.ind = "point",
col.ind = iris$Species,
addEllipses = T,
legend.title = "Grupa",
palette = "jco",
col.var = "black",
label = "var",
repel = T,
labelsize = 3)
